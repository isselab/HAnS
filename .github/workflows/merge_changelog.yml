name: AutoMerge Changelog

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

jobs:
  automerge:
    name: Auto-Approve & Merge Changelog PR
    runs-on: ubuntu-latest
    env:
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
      GH_TOKEN: ${{ secrets.BOT_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Get Latest Tag by Date
        id: get_tag
        run: |
          VERSION=$(git tag --sort=-creatordate | head -n 1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Find Changelog PR
        id: find_pr
        run: |
          VERSION=${{ steps.get_tag.outputs.version }}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          PR_URL=$(gh pr list --search "Changelog update - \`$VERSION\`" --json url -q '.[0].url')
          echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT

      - name: Get Changed Files
        id: changed_files
        run: |
          FILES=$(gh pr view "${{ steps.find_pr.outputs.pr_url }}" --json files -q '.files[].path')
          echo "files=$FILES" >> $GITHUB_OUTPUT

      - name: Check if only CHANGELOG.md was changed
        id: check_changelog_only
        run: |
          FILES="${{ steps.changed_files.outputs.files }}"
          if [[ "$FILES" == "CHANGELOG.md" ]]; then
            echo "only_changelog=true" >> $GITHUB_OUTPUT
          else
            echo "only_changelog=false" >> $GITHUB_OUTPUT
          fi

      - name: Trigger Build
        if: steps.check_changelog_only.outputs.only_changelog == 'true'
        run: |
          VERSION=${{ steps.get_tag.outputs.version }}
          BRANCH="changelog-update-$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          
          git config --global user.email "johmara-bot@users.noreply.github.com"
          git config --global user.name "johmara-bot"
          git checkout $BRANCH
          git pull origin $BRANCH
          git commit --allow-empty -m "Trigger build after changelog merge"
          git push origin main

      - name: Approve PR via REST API
        if: steps.check_changelog_only.outputs.only_changelog == 'true'
        run: gh pr review "${{ steps.find_pr.outputs.pr_url }}" -a -b "Auto-approved by bot."

      - name: Squash Merge PR
        if: steps.check_changelog_only.outputs.only_changelog == 'true'
        run: gh pr merge "${{ steps.find_pr.outputs.pr_url }}" -s -d --auto